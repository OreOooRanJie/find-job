------位运算------
异或: ^

a ^ a = 0
a ^ 0 = a
满足交换律和结合律
例1：利用位运算实现a，b的值交换
a = a ^ b
b = a ^ b
a = a ^ b
总的表达式：
b = a ^ b ^ b = a
a = a ^ b ^ a = b
前提：
a和b的内存不应该是同一块，如果是同一块内存，则会出现其中一个值为0的情况

例2：
一个数组，存在两类数，其中一个数出现奇数次，其余数皆出现偶数次，如何找出出现奇数次的那个数？

由于出现偶数次的数的异或结果一定是0，而0异或本身为本身。那么所有数可以分解为1+偶数次数。
所以只需对所有数依次异或即可得到奇数次数

例3：
一个数组，存在两类数，其中有两个数出现了奇数次，其余皆为偶数次，如何找出出现奇数次的那两个数？

首先假定出现奇数次的两个数分别为a和b
由于出现偶数次的数的异或结果一定为0，所以对所有数依次做异或运算的结果一定是eor = a^b
且由于a!=b, eor一定不等于0
也即是说明eor的二进制表达一定存在一个1
也即是说明a和b在eor的”1“位上是不相等的
也就可以利用这一位来区分出a和b
首先得到那个”1“
取到eor最右边的”1“: eor' = eor & (~eor + 1)
然后原始数列中的所有数都跟eor'做与运算，当与运算的结果为零的时：
利用当前数与eor做异或，得到的最终结果要么是a要么是b，记为temp
再利用temp与eor异或即可得到另一个数，要么是b要么是a:
a ^ eor = b; b ^ eor = a